{"version":3,"file":"parse.js","sources":["../src/parsers/date.js","../src/parsers/time.js","../src/parsers/index.js","../src/parsers/list.js","../src/parse.js","../src/parsers/duration.js"],"sourcesContent":["'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc } from 'date-fns-tz/esm'\n\nconst loc = 'UTC'\nconst commonDateFormats = [\n  'yyyy-MM-dd',\n  'dd/MM/yyyy',\n  'dd/MM/yy',\n  'dd-MM-yyyy',\n  'dd-MM-yy',\n  'dd.MM.yyyy',\n  'dd.MM.yy'\n]\n\nexport default function parseDate(text) {\n  const match = commonDateFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const date = zonedTimeToUtc(\n      parse(text, commonDateFormats[match.indexOf(true)], new Date()),\n      loc\n    ).toJSON()\n    return date.split('T')[0]\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport { parse, isMatch } from 'date-fns'\nimport { zonedTimeToUtc, formatInTimeZone } from 'date-fns-tz/esm'\n\nconst loc = 'UTC'\nconst commonTimeFormats = ['HH:mm', 'HH.mm', 'hh:mm a', 'hh:mm A']\n\nexport default function parseTime(text) {\n  const match = commonTimeFormats.map((format) => {\n    return isMatch(text, format)\n  })\n  if (match.indexOf(true) > -1) {\n    const time = zonedTimeToUtc(\n      parse(text, commonTimeFormats[match.indexOf(true)], new Date()),\n      loc\n    )\n    return formatInTimeZone(time, loc, 'HH:mm')\n  } else {\n    return null\n  }\n}\n","'use strict'\n\nimport date from './date.js'\nimport time from './time.js'\nimport duration from './duration.js'\nimport list from './list.js'\n\nexport const parseDate = date\nexport const parseTime = time\nexport const parseDuration = duration\nexport const parseList = list\n","'use strict'\n\nexport default function parseList(list) {\n  return list.children\n    .map((item) => {\n      const listItem = {}\n      if (item.type === 'list') {\n        return parseList(list)\n      } else if (item.type === 'listItem') {\n        listItem.checked = item.checked\n        return item.children\n          .map((child) => {\n            if (child.type === 'paragraph') {\n              listItem.text = child.children\n                .map((c) => {\n                  if (c.type === 'link') {\n                    return c.children[0].value\n                  } else {\n                    return c.value\n                  }\n                })\n                .filter((x) => !!x)\n                .join('')\n              return listItem\n            }\n          })\n          .filter((x) => !!x)\n      }\n    })\n    .filter((x) => !!x)\n}\n","'use strict'\n\nimport { unified } from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkGfm from 'remark-gfm'\nimport slugify from '@sindresorhus/slugify'\nimport remarkStringify from 'remark-stringify'\nimport stripFinalNewline from 'strip-final-newline'\n\nimport {\n  parseDate,\n  parseTime,\n  parseDuration,\n  parseList\n} from './parsers/index.js'\n\nexport default async function parseMD(body) {\n  const tokens = await unified().use(remarkParse).use(remarkGfm).parse(body)\n  if (!tokens) {\n    return []\n  }\n\n  const structuredResponse = {}\n  let currentHeading = null\n  for (const token of tokens.children) {\n    const text = await unified()\n      .use(remarkGfm)\n      .use(remarkStringify)\n      .stringify(token)\n    const cleanText = stripFinalNewline(text)\n\n    // issue forms uses h3 as a heading\n    if (token.type === 'heading' && token.depth === 3) {\n      currentHeading = slugify(token.children[0].value)\n      structuredResponse[currentHeading] = {\n        title: token.children[0].value,\n        content: []\n      }\n    } else if (token.type === 'paragraph' && currentHeading) {\n      const obj = structuredResponse[currentHeading]\n\n      const date = parseDate(cleanText)\n      const time = parseTime(cleanText)\n      const duration = parseDuration(cleanText)\n\n      if (date) {\n        obj.date = date\n      }\n\n      if (time) {\n        obj.time = time\n      }\n\n      if (duration) {\n        obj.duration = duration\n      }\n\n      obj.content.push(cleanText)\n    } else if (token.type === 'list') {\n      const obj = structuredResponse[currentHeading]\n      obj.text = cleanText\n      obj.list = parseList(token).flat()\n    } else if (token.type === 'html') {\n      const obj = structuredResponse[currentHeading]\n      obj.content.push(token.html)\n    } else if (token.type === 'code') {\n      const obj = structuredResponse[currentHeading]\n      obj.lang = token.lang\n      obj.text = cleanText\n    } else if (token.type === 'heading' && token.depth > 3) {\n      const obj = structuredResponse[currentHeading]\n      obj.content.push(token.children[0].value)\n    } else {\n      console.log('unhandled token type')\n      console.log(token)\n    }\n  }\n\n  for (const key in structuredResponse) {\n    const token = structuredResponse[key]\n    const content = token.content.filter(Boolean)\n    if (content && content.length > 0) {\n      if (content.length === 1) {\n        token.text = content[0]\n      }\n      token.text = content.join('\\n\\n')\n    }\n    token.content = content\n  }\n\n  return structuredResponse\n}\n","'use strict'\n\nexport default function parseDuration(text) {\n  let matched = false\n  const duration = {\n    hours: 0,\n    minutes: 0\n  }\n\n  const hoursAndMinutes = new RegExp(/([0-9]+)h([0-9]+)m/)\n  const hours = new RegExp(/([0-9]+)h/)\n\n  if (text.match(hoursAndMinutes)) {\n    matched = true\n    const [, h, m] = text.match(hoursAndMinutes)\n    duration.hours = parseInt(h)\n    duration.minutes = parseInt(m)\n  } else if (text.match(hours)) {\n    matched = true\n    const [, h] = text.match(hours)\n    duration.hours = parseInt(h)\n    duration.minutes = 0\n  }\n\n  if (matched) {\n    return duration\n  } else {\n    return null\n  }\n}\n"],"names":["commonDateFormats","commonTimeFormats","parseList","list","children","map","item","listItem","type","checked","child","text","c","value","filter","x","join","_settle","pact","state","s","_Pact","o","bind","v","then","observer","parseMD","body","token","cleanText","obj","date","time","duration","key","content","unified","use","remarkParse","remarkGfm","parse","tokens","_temp2","structuredResponse","Boolean","length","currentHeading","_iterator","test","update","stage","shouldContinue","_isSettledPact","result","reject","_resumeAfterTest","_resumeAfterBody","updateValue","remarkStringify","stringify","match","stripFinalNewline","depth","slugify","title","format","isMatch","indexOf","zonedTimeToUtc","Date","toJSON","split","parseTime","formatInTimeZone","matched","hours","minutes","hoursAndMinutes","RegExp","_text$match","m","parseInt","parseDuration","push","flat","html","lang","console","log","_temp","prototype","onFulfilled","onRejected","this","callback","e","_this","thenable"],"mappings":"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"}